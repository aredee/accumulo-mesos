/**
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package aredee.mesos.frameworks.accumulo;

option java_outer_classname = "Protos";

/**
 * *****************************
 * Framework
 * *****************************
 */
message FrameworkIdentity {

  /**
   * ID of the framework.
   * Upon initial framework registration Mesos will generate the framework id
   * and return it as part of Scheduler.registered.
   * The framework will use this value (if set) when it restarts and re-registers with Mesos
   */
  optional string frameworkId = 1;

  /**
   * Name for the framework that's more convenient to use than the framework id.
   *
   */
  optional string frameworkName = 2;
}

message RegisteredFrameworks {
  repeated FrameworkIdentity frameworks = 1;
}

message FrameworkConfiguration {
  required FrameworkIdentity id = 1;
  optional string accumuloInstance = 2;
}

/**
 * *****************************
 * Cluster
 * *****************************
 */
message ClusterConfiguration {
  optional string accumuloInstanceName = 1;
  optional string accumuloRootUser = 2;
  optional string accumuloRootPassword = 3;

  optional uint32 minMasterMemory = 4 [default = 2048];
  optional uint32 minTserverMemory = 5 [default = 2048];
  optional uint32 minGCMemory = 6 [default = 512];
  optional uint32 minMonitorMemory = 7 [default = 128];
  optional uint32 minMasterCpus = 8 [default = 2];
  optional uint32 minTserverCpus = 9 [default = 2];
  optional uint32 minGCCpus = 10 [default = 1];
  optional uint32 minMonitorCpus = 11 [default = 1];
  optional uint32 minTservers = 12 [default = 3];

  optional bool launchTracer = 13 [default = false];

}

message ServerProcessConfiguration {
  required string serverType = 1;
  optional uint32 maxMemory = 2;
  optional uint32 minMemory = 3;

  optional string accumuloDir = 4;
  optional string hadoopConfDir = 5;

}
// cluster state?

